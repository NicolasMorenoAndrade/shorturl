services:
  app:
    build: .
    expose:
      - 3001
    environment:
      - VIRTUAL_HOST=hitoiki.co,www.hitoiki.co
      - LETSENCRYPT_HOST=hitoiki.co,www.hitoiki.co
      - VIRTUAL_PORT=3001
      # Database credentials
      - SHORTURL_DB_USER=${NEON_DB_USER}
      - SHORTURL_DB_PASSWORD=${NEON_DB_PASSWORD}
      - SSL=true
      - SSLMODE=require
    restart: unless-stopped

  # Nginx reverse proxy
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy  #  name of the container refered by acme
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: unless-stopped

  # Let's Encrypt companion
  acme-companion:
    image: nginxproxy/acme-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=shikifuiku@proton.me
      - NGINX_PROXY_CONTAINER=nginx-proxy #env var to connect acme container with nginx
    depends_on:
      - nginx-proxy
    restart: unless-stopped

volumes:
  certs:
  vhost:
  html:
  acme:


# Minimal docker-compose to build locally (no nginx no acme no SSL)
# services:
#   app:
#     build: .
#     ports:
#       - 8080:3001
#     environment:
#       SHORTURL_DB_USER: ${NEON_DB_USER}
#       SHORTURL_DB_PASSWORD: ${NEON_DB_PASSWORD}
#       SSL: "true"
#       SSLMODE: "require"
#     restart: "no"
